{"ast":null,"code":"const ordersReducer = (state = {\n  orders: {}\n}, action) => {\n  switch (action.type) {\n    case \"SETORDERS\":\n      const {\n        user,\n        item,\n        quantity,\n        colors\n      } = action.payload;\n      const userOrders = {\n        ...state.orders\n      };\n      if (!userOrders[user]) {\n        userOrders[user] = [];\n      }\n      const existingItemIndex = userOrders[user].findIndex(order => order.item._id === item._id && JSON.stringify(order.colors) === JSON.stringify(colors));\n      if (existingItemIndex !== -1) {\n        userOrders[user][existingItemIndex].quantity += quantity;\n      } else {\n        userOrders[user].push({\n          item,\n          quantity,\n          colors\n        });\n      }\n      return {\n        ...state,\n        orders: userOrders\n      };\n    case \"SETMULTIPLEORDERS\":\n      const {\n        user_id,\n        orders\n      } = action.payload;\n      const user_orders = {\n        ...state.orders\n      };\n      if (!user_orders[user_id]) {\n        user_orders[user_id] = [];\n      }\n      orders.forEach(({\n        item,\n        quantity,\n        colors\n      }) => {\n        const existingItemIndex = user_orders[user_id].findIndex(order => order.item._id === item._id && JSON.stringify(order.colors) === JSON.stringify(colors));\n        if (existingItemIndex !== -1) {\n          user_orders[user_id][existingItemIndex].quantity += quantity;\n        } else {\n          user_orders[user_id].push({\n            item,\n            quantity,\n            colors\n          });\n        }\n      });\n      return {\n        ...state,\n        orders: user_orders\n      };\n    case \"REMOVEORDER\":\n      const {\n        userId: removeUserId,\n        itemId: removeItemId,\n        color\n      } = action.payload;\n      const filtredOrders = {\n        ...state.orders\n      };\n      if (filtredOrders[removeUserId]) {\n        filtredOrders[removeUserId] = filtredOrders[removeUserId].filter(order => !(order.item._id === removeItemId && JSON.stringify(order.colors) === JSON.stringify(color)));\n      }\n      return {\n        ...state,\n        orders: filtredOrders\n      };\n    case \"EDITORDER\":\n      const {\n        userId,\n        itemId,\n        colors: editColors,\n        newQuantity\n      } = action.payload;\n      const updatedOrders = {\n        ...state.orders\n      };\n      if (updatedOrders[userId]) {\n        const itemIndex = updatedOrders[userId].findIndex(order => order.item._id === itemId && JSON.stringify(order.colors) === JSON.stringify(editColors));\n        if (itemIndex !== -1) {\n          updatedOrders[userId][itemIndex].quantity = newQuantity;\n        }\n      }\n      return {\n        ...state,\n        orders: updatedOrders\n      };\n    case \"CLEARUSERORDERS\":\n      const userIdToClear = action.payload;\n      const newOrders = {\n        ...state.orders\n      };\n      delete newOrders[userIdToClear];\n      return {\n        ...state,\n        orders: newOrders\n      };\n    default:\n      return state;\n  }\n};\nexport default ordersReducer;","map":{"version":3,"names":["ordersReducer","state","orders","action","type","user","item","quantity","colors","payload","userOrders","existingItemIndex","findIndex","order","_id","JSON","stringify","push","user_id","user_orders","forEach","userId","removeUserId","itemId","removeItemId","color","filtredOrders","filter","editColors","newQuantity","updatedOrders","itemIndex","userIdToClear","newOrders"],"sources":["C:/Users/Youcode/Documents/GitHub/SB-Project/frontend/src/redux/reducers/ordersReducer.js"],"sourcesContent":["const ordersReducer = (state = { orders: {} }, action) => {\r\n  switch (action.type) {\r\n    case \"SETORDERS\":\r\n      const { user, item, quantity, colors } = action.payload;\r\n      const userOrders = { ...state.orders };\r\n\r\n      if (!userOrders[user]) {\r\n        userOrders[user] = [];\r\n      }\r\n\r\n      const existingItemIndex = userOrders[user].findIndex(\r\n        (order) =>\r\n          order.item._id === item._id &&\r\n          JSON.stringify(order.colors) === JSON.stringify(colors)\r\n      );\r\n\r\n      if (existingItemIndex !== -1) {\r\n        userOrders[user][existingItemIndex].quantity += quantity;\r\n      } else {\r\n        userOrders[user].push({ item, quantity, colors });\r\n      }\r\n\r\n      return { ...state, orders: userOrders };\r\n\r\n    case \"SETMULTIPLEORDERS\":\r\n      const { user_id, orders } = action.payload;\r\n      const user_orders = { ...state.orders };\r\n\r\n      if (!user_orders[user_id]) {\r\n        user_orders[user_id] = [];\r\n      }\r\n\r\n      orders.forEach(({ item, quantity, colors }) => {\r\n        const existingItemIndex = user_orders[user_id].findIndex(\r\n          (order) =>\r\n            order.item._id === item._id &&\r\n            JSON.stringify(order.colors) === JSON.stringify(colors)\r\n        );\r\n\r\n        if (existingItemIndex !== -1) {\r\n          user_orders[user_id][existingItemIndex].quantity += quantity;\r\n        } else {\r\n          user_orders[user_id].push({ item, quantity, colors });\r\n        }\r\n      });\r\n\r\n      return { ...state, orders: user_orders };\r\n\r\n    case \"REMOVEORDER\":\r\n      const {\r\n        userId: removeUserId,\r\n        itemId: removeItemId,\r\n        color,\r\n      } = action.payload;\r\n      const filtredOrders = { ...state.orders };\r\n\r\n      if (filtredOrders[removeUserId]) {\r\n        filtredOrders[removeUserId] = filtredOrders[removeUserId].filter(\r\n          (order) =>\r\n            !(\r\n              order.item._id === removeItemId &&\r\n              JSON.stringify(order.colors) === JSON.stringify(color)\r\n            )\r\n        );\r\n      }\r\n\r\n      return { ...state, orders: filtredOrders };\r\n\r\n    case \"EDITORDER\":\r\n      const {\r\n        userId,\r\n        itemId,\r\n        colors: editColors,\r\n        newQuantity,\r\n      } = action.payload;\r\n      const updatedOrders = { ...state.orders };\r\n\r\n      if (updatedOrders[userId]) {\r\n        const itemIndex = updatedOrders[userId].findIndex(\r\n          (order) =>\r\n            order.item._id === itemId &&\r\n            JSON.stringify(order.colors) === JSON.stringify(editColors)\r\n        );\r\n\r\n        if (itemIndex !== -1) {\r\n          updatedOrders[userId][itemIndex].quantity = newQuantity;\r\n        }\r\n      }\r\n\r\n      return { ...state, orders: updatedOrders };\r\n\r\n    case \"CLEARUSERORDERS\":\r\n      const userIdToClear = action.payload;\r\n      const newOrders = { ...state.orders };\r\n      delete newOrders[userIdToClear];\r\n      return { ...state, orders: newOrders };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ordersReducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}